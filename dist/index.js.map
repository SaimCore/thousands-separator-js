{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export const thousandsSeparator = (\r\n    number: number,\r\n    decimals: number = 0,\r\n    sep: string = ','\r\n): string => {\r\n    try {\r\n        if (number == null || isNaN(number)) {\r\n            return '';\r\n        }\r\n\r\n        const decimalPlaces = Math.max(0, Math.floor(decimals));\r\n        const fixed = number.toFixed(decimalPlaces);\r\n\r\n        const [integerPart, decimalPart] = fixed.split('.');\r\n\r\n        const withSeparator = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, sep);\r\n\r\n        return decimalPart ? `${withSeparator}.${decimalPart}` : withSeparator;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};"],"mappings":";AAAO,IAAM,qBAAqB,CAC9B,QACA,WAAmB,GACnB,MAAc,QACL;AACT,MAAI;AACA,QAAI,UAAU,QAAQ,MAAM,MAAM,GAAG;AACjC,aAAO;AAAA,IACX;AAEA,UAAM,gBAAgB,KAAK,IAAI,GAAG,KAAK,MAAM,QAAQ,CAAC;AACtD,UAAM,QAAQ,OAAO,QAAQ,aAAa;AAE1C,UAAM,CAAC,aAAa,WAAW,IAAI,MAAM,MAAM,GAAG;AAElD,UAAM,gBAAgB,YAAY,QAAQ,yBAAyB,GAAG;AAEtE,WAAO,cAAc,GAAG,aAAa,IAAI,WAAW,KAAK;AAAA,EAC7D,SAAS,KAAK;AACV,YAAQ,MAAM,GAAG;AACjB,WAAO;AAAA,EACX;AACJ;","names":[]}